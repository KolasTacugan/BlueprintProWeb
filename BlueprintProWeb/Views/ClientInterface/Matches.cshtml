@model IEnumerable<BlueprintProWeb.ViewModels.MatchViewModel>

@{
    ViewData["Title"] = "Architect Match";
    Layout = "~/Views/Shared/_ClientSharedLayout.cshtml";
}

<form id="tokenForm">
    @Html.AntiForgeryToken()
</form>

@section Styles{
    <style>
        /* Override shared layout background for matches page */
        body::before {
            background: url("/images/BPP_Dashboard_BG.png") center/cover no-repeat !important;
            opacity: 0.1 !important;
        }

        /* Ensure scrollable page with consistent background */
        body {
            background: #F1F7F9 !important;
            overflow-y: auto !important;
            height: auto !important;
            font-family: 'Raleway', sans-serif !important;
        }

        /* Main content positioning that responds to sidebar state */
        main.container {
            margin-left: 300px;
            margin-top: 90px;
            padding: 1.5rem;
            padding-top: 4rem;
            max-width: calc(100% - 320px);
            transition: margin-left 0.4s ease, max-width 0.4s ease;
        }

        /* When sidebar is collapsed, adjust main content */
        .sidebar.collapsed ~ * main.container,
        body:has(.sidebar.collapsed) main.container {
            margin-left: 110px;
            max-width: calc(100% - 130px);
        }

        /* Enhanced Match Button */
        .match-btn{
            background: linear-gradient(135deg, #344EAD 0%, #2563EB 100%);
            color: white;
            border: none;
            border-radius: 10px;
            padding: 0.75rem 1.5rem;
            font-weight: 600;
            font-family: 'Raleway', sans-serif;
            font-size: 0.9rem;
            transition: all 0.2s ease;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            box-shadow: 0 2px 8px rgba(52, 78, 173, 0.2);
        }

        .match-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(52, 78, 173, 0.3);
            background: linear-gradient(135deg, #2563EB 0%, #344EAD 100%);
            color: white;
        }

        .match-btn:active {
            transform: translateY(0);
        }

        .match-btn::before {
            content: "🤝";
            font-size: 1rem;
        }

        /* Chat Panel Styling - Enhanced */
        .chat-panel {
            background: #FFFFFF;
            border-radius: 16px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(52, 78, 173, 0.05);
            display: flex;
            flex-direction: column;
            overflow: hidden;
            height: 100%;
        }

        .chat-header {
            padding: 1.5rem;
            border-bottom: 1px solid rgba(52, 78, 173, 0.1);
            background: linear-gradient(135deg, rgba(52, 78, 173, 0.05) 0%, rgba(37, 99, 235, 0.02) 100%);
            border-radius: 16px 16px 0 0;
        }

        .chat-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: #1a202c;
            margin: 0;
            font-family: 'Raleway', sans-serif;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .chat-title::before {
            content: "💬";
            font-size: 1.2rem;
        }

        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 1.5rem;
            background: #FAFAFA;
        }

        .message-container {
            display: flex;
            margin-bottom: 1rem;
            align-items: flex-start;
            gap: 0.75rem;
        }

        .message-container.own {
            flex-direction: row-reverse;
        }

        .message-bubble {
            max-width: 70%;
            padding: 0.875rem 1.125rem;
            border-radius: 18px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            font-size: 0.9rem;
            line-height: 1.4;
            word-wrap: break-word;
            font-family: 'Raleway', sans-serif;
        }

        .message-bubble.own {
            background: linear-gradient(135deg, #344EAD 0%, #2563EB 100%);
            color: white;
            border-bottom-right-radius: 6px;
        }

        .message-bubble.other {
            background: #FFFFFF;
            color: #374151;
            border: 1px solid rgba(52, 78, 173, 0.1);
            border-bottom-left-radius: 6px;
        }

        .chat-input-area {
            padding: 1.5rem;
            background: #FFFFFF;
            border-top: 1px solid rgba(52, 78, 173, 0.1);
            border-radius: 0 0 16px 16px;
        }

        .chat-input-container {
            display: flex;
            gap: 0.75rem;
            align-items: flex-end;
            background: #F8FAFC;
            border-radius: 16px;
            border: 2px solid #E2E8F0;
            padding: 1rem;
            transition: all 0.2s ease;
        }

        .chat-input-container:focus-within {
            border-color: #344EAD;
            background: #FFFFFF;
            box-shadow: 0 0 0 3px rgba(52, 78, 173, 0.1);
        }

        .message-input {
            flex: 1;
            border: none;
            background: transparent;
            font-size: 0.9rem;
            font-family: 'Raleway', sans-serif;
            resize: none;
            min-height: 20px;
            max-height: 100px;
            line-height: 1.4;
            outline: none;
        }

        .message-input::placeholder {
            color: #94A3B8;
        }

        .send-button {
            background: linear-gradient(135deg, #344EAD 0%, #2563EB 100%);
            border: none;
            border-radius: 12px;
            width: 45px;
            height: 45px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.1rem;
            transition: all 0.2s ease;
            cursor: pointer;
            box-shadow: 0 2px 8px rgba(52, 78, 173, 0.2);
        }

        .send-button:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(52, 78, 173, 0.3);
        }

        /* Architect Results Panel - Enhanced */
        .architect-results-panel {
            background: #FFFFFF;
            border-radius: 16px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(52, 78, 173, 0.05);
            overflow: hidden;
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        .results-header {
            padding: 1.5rem;
            border-bottom: 1px solid rgba(52, 78, 173, 0.1);
            background: linear-gradient(135deg, rgba(52, 78, 173, 0.05) 0%, rgba(37, 99, 235, 0.02) 100%);
            border-radius: 16px 16px 0 0;
        }

        .results-title {
            font-size: 1.75rem;
            font-weight: 600;
            color: #1a202c;
            margin: 0;
            font-family: 'Raleway', sans-serif;
            display: flex;
            align-items: center;
            gap: 0.6rem;
        }

        .results-title-icon {
            color: #344EAD;
            font-size: 1.5rem;
            width: 28px;
            height: 28px;
            background: rgba(52, 78, 173, 0.1);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .results-content {
            flex: 1;
            overflow-y: auto;
            padding: 1.5rem;
        }

        /* Enhanced Architect Card Styling */
        .card {
            background: #FFFFFF;
            border-radius: 16px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(52, 78, 173, 0.05);
            overflow: hidden;
            transition: all 0.3s ease;
            height: 100%;
            display: flex;
            flex-direction: column;
            cursor: pointer;
            position: relative;
        }

        .card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(52, 78, 173, 0.15);
            border-color: rgba(52, 78, 173, 0.1);
        }

        .card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(135deg, #344EAD 0%, #2563EB 100%);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .card:hover::before {
            opacity: 1;
        }

        .card-body {
            padding: 1.5rem;
            flex: 1;
            display: flex;
            flex-direction: column;
            background: #FFFFFF;
        }

        /* Architect Profile Image Enhancement */
        .card-body img {
            transition: all 0.3s ease;
            border-radius: 50%;
            border: 3px solid rgba(52, 78, 173, 0.1);
        }

        .card:hover .card-body img {
            transform: scale(1.05);
            border-color: rgba(52, 78, 173, 0.2);
        }

        /* Architect Name Styling */
        .architect-link {
            color: #344EAD;
            cursor: pointer;
            transition: all 0.2s ease;
            text-decoration: none;
            font-weight: 700;
            font-size: 1rem;
            line-height: 1.3;
            font-family: 'Raleway', sans-serif;
            border-bottom: 1px solid transparent;
        }

        .architect-link:hover {
            color: #2563EB;
            text-decoration: none;
            border-bottom-color: #2563EB;
        }

        /* Enhanced Modal Styling */
        .modal-content {
            border-radius: 16px;
            border: none;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }

        .modal-header {
            background: linear-gradient(135deg, #344EAD 0%, #2563EB 100%);
            color: white;
            border-radius: 16px 16px 0 0;
            border-bottom: none;
            padding: 1.5rem;
        }

        .modal-title {
            font-weight: 600;
            font-family: 'Raleway', sans-serif;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .modal-title::before {
            content: "👨‍💼";
            font-size: 1.2rem;
        }

        .btn-close {
            filter: invert(1);
        }

        .modal-body {
            padding: 2rem;
            font-family: 'Raleway', sans-serif;
        }

        /* Profile Card in Modal */
        .profile-main-card {
            background: #F8FAFC;
            border-radius: 12px;
            border: 1px solid rgba(52, 78, 173, 0.1);
        }

        .profile-info {
            margin-bottom: 1.5rem;
        }

        .architect-name {
            color: #1a202c;
            font-family: 'Raleway', sans-serif;
        }

        .profile-info .text-muted {
            color: #64748B !important;
            font-size: 0.9rem;
        }

        .avatar img {
            border: 3px solid rgba(52, 78, 173, 0.1);
            transition: all 0.2s ease;
        }

        .avatar img:hover {
            border-color: rgba(52, 78, 173, 0.3);
            transform: scale(1.05);
        }

        /* Enhanced Rating Bar */
        .rating-wrapper {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .rating-bar {
            flex: 1;
            height: 8px;
            background: #E2E8F0;
            border-radius: 4px;
            overflow: hidden;
            position: relative;
        }

        .rating-fill {
            height: 100%;
            background: linear-gradient(135deg, #344EAD 0%, #2563EB 100%);
            transition: width 0.6s ease-in-out;
            border-radius: 4px;
        }

        .rating-text {
            font-weight: 600;
            font-size: 0.85rem;
            color: #1a202c;
            min-width: 2rem;
        }

        /* Alert Enhancement */
        .alert-warning {
            background: linear-gradient(135deg, rgba(251, 191, 36, 0.1) 0%, rgba(245, 158, 11, 0.05) 100%);
            border: 1px solid rgba(251, 191, 36, 0.2);
            border-radius: 12px;
            color: #92400e;
            font-family: 'Raleway', sans-serif;
            font-weight: 500;
        }

        /* Notification Modal Enhancement */
        #notificationModal .modal-content {
            border-radius: 16px;
        }

        #notificationModal .modal-header {
            background: linear-gradient(135deg, #344EAD 0%, #2563EB 100%);
            color: white;
            border-radius: 16px 16px 0 0;
        }

        #notificationModal .btn-primary {
            background: linear-gradient(135deg, #344EAD 0%, #2563EB 100%);
            border: none;
            border-radius: 10px;
            font-weight: 600;
            font-family: 'Raleway', sans-serif;
            box-shadow: 0 2px 8px rgba(52, 78, 173, 0.2);
        }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            main.container {
                margin-left: 0 !important;
                margin-top: 75px;
                max-width: 100% !important;
                padding: 1rem;
                padding-top: 2rem;
            }

            .row {
                flex-direction: column;
                height: auto !important;
            }

            .col-md-8, .col-md-4 {
                width: 100%;
                max-width: 100%;
            }

            .chat-panel {
                margin-top: 1.5rem;
                min-height: 400px;
            }

            .message-bubble {
                max-width: 85%;
            }

            .chat-messages {
                padding: 1rem;
            }

            .architect-results-panel {
                margin-bottom: 1rem;
            }

            .results-title {
                font-size: 1.4rem;
            }
        }

        @@media (max-width: 991.98px) {
            .col-md-8 {
                margin-bottom: 1rem;
            }
        }

        /* Custom scrollbars */
        .chat-messages::-webkit-scrollbar,
        .results-content::-webkit-scrollbar {
            width: 6px;
        }

        .chat-messages::-webkit-scrollbar-track,
        .results-content::-webkit-scrollbar-track {
            background: transparent;
        }

        .chat-messages::-webkit-scrollbar-thumb,
        .results-content::-webkit-scrollbar-thumb {
            background: #CBD5E1;
            border-radius: 3px;
        }

        .chat-messages::-webkit-scrollbar-thumb:hover,
        .results-content::-webkit-scrollbar-thumb:hover {
            background: #94A3B8;
        }
    </style>
}

<div class="row" style="height: 85vh;">

    <!-- LEFT SIDE: Architect Matches -->
    <div class="col-md-8">
        <div class="architect-results-panel">
            <div class="results-header">
                <h4 class="results-title">
                    <div class="results-title-icon">
                        <i class="fas fa-users"></i>
                    </div>
                    Architect Matches
                </h4>
            </div>
            <div class="results-content" id="architectResults">
                <div id="resultsContainer" class="row g-3">
                    @if (Model != null && Model.Any())
                    {
                        foreach (var match in Model)
                        {
                            <div class="col-lg-6 col-md-12 mb-3">
                                <div class="card shadow-sm h-100">
                                    <div class="card-body d-flex flex-column">
                                        <div class="d-flex align-items-center mb-3">
                                            <img src="@match.ProfilePhoto"
                                                 class="rounded-circle me-3 border"
                                                 width="50" height="50"
                                                 alt="@match.ArchitectName" />
                                            <div>
                                                <h6 class="fw-bold mb-0">
                                                    <a href="#"
                                                       class="architect-link"
                                                       data-architect-id="@match.ArchitectId">
                                                        @match.ArchitectName
                                                    </a>
                                                </h6>
                                                <!-- Enhanced Rating Display -->
                                                <div class="rating-wrapper mt-2" style="max-width: 120px;">
                                                    <div class="rating-bar">
                                                        <div class="rating-fill" style="width: @(match.AverageRating * 20)%;"></div>
                                                    </div>
                                                    <span class="rating-text">@match.AverageRating.ToString("0.0")</span>
                                                </div>
                                                <small class="text-muted">
                                                    (@match.RatingCount @(match.RatingCount == 1 ? "rating" : "ratings"))
                                                </small>
                                            </div>
                                        </div>
                                        <button class="btn btn-outline-primary w-100 mt-auto match-btn"
                                                data-architect-id="@match.ArchitectId">
                                            Match
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12">
                            <div class="alert alert-warning">No matches found yet.</div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- RIGHT SIDE: Chat -->
    <div class="col-md-4">
        <div class="chat-panel">
            <div class="chat-header">
                <h4 class="chat-title">Chat Assistant</h4>
            </div>

            <!-- Chat Messages -->
            <div class="chat-messages" id="chatWindow">
                <div class="message-container">
                    <div class="message-bubble other">
                        👋 Hi! Tell me what kind of architect you are looking for.
                    </div>
                </div>
            </div>

            <!-- Chat Input -->
            <div class="chat-input-area">
                <div class="chat-input-container">
                    <textarea id="clientPrompt" class="message-input" rows="1"
                              placeholder="Describe what you're looking for..."></textarea>
                    <button class="send-button" id="searchArchitects" title="Send Message">
                        <span class="material-symbols-rounded">send</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Architect Profile Modal -->
<div class="modal fade" id="architectProfileModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Architect Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="profile-container">
                    <div class="profile-main-card p-3">
                        <div class="profile-info d-flex align-items-center gap-3 mb-3">
                            <div class="avatar">
                                <img id="architectProfilePhoto" src="~/images/profile.jpg" alt="Avatar" style="width:64px;height:64px;border-radius:50%;">
                            </div>
                            <div class="user-details">
                                <h3 id="architectProfileName" class="architect-name mb-1 fw-bold"></h3>
                                <div id="architectProfileEmail" class="text-muted"></div>
                                <div id="architectProfilePhone" class="text-muted"></div>
                            </div>
                        </div>
                        <div class="mt-3">
                            <p><strong>License No:</strong> <span id="architectProfileLicense"></span></p>
                            <p><strong>Style:</strong> <span id="architectProfileStyle"></span></p>
                            <p><strong>Specialization:</strong> <span id="architectProfileSpecialization"></span></p>
                            <p><strong>Location:</strong> <span id="architectProfileLocation"></span></p>
                            <p>
                                <strong>Credentials File:</strong>
                                <a id="architectProfileCredentials" href="#" target="_blank" class="text-decoration-underline archi-cred">Architect's Credentials</a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- NOTIFICATION MODAL -->
<div class="modal fade" id="notificationModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="notificationTitle" class="modal-title"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="notificationMessage">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // Listen for sidebar toggle and adjust main content accordingly
        document.addEventListener('DOMContentLoaded', function() {
            const sidebar = document.querySelector('.sidebar');
            const sidebarToggler = document.querySelector('.sidebar-toggler');
            const mainContent = document.querySelector('main.container');
            
            function adjustMainContent() {
                if (sidebar && mainContent) {
                    if (sidebar.classList.contains('collapsed')) {
                        mainContent.style.marginLeft = '110px';
                        mainContent.style.maxWidth = 'calc(100% - 130px)';
                    } else {
                        mainContent.style.marginLeft = '300px';
                        mainContent.style.maxWidth = 'calc(100% - 320px)';
                    }
                }
            }
            
            // Adjust on page load
            adjustMainContent();
            
            // Listen for sidebar toggle
            if (sidebarToggler) {
                sidebarToggler.addEventListener('click', function() {
                    // Wait for the sidebar transition to start
                    setTimeout(adjustMainContent, 50);
                });
            }

            // Auto-resize textarea and handle Enter key for sending
            const messageInput = document.getElementById('clientPrompt');
            if (messageInput) {
                // Auto-resize functionality
                messageInput.addEventListener('input', function() {
                    this.style.height = 'auto';
                    this.style.height = Math.min(this.scrollHeight, 100) + 'px';
                });

                // Handle Enter key to send message
                messageInput.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' && !e.shiftKey) {
                        e.preventDefault(); // Prevent default line break behavior
                        
                        // Check if there's text to send
                        const messageText = this.value.trim();
                        if (messageText) {
                            // Trigger the search functionality
                            document.getElementById('searchArchitects').click();
                        }
                    }
                    // Allow Shift+Enter for line breaks
                });
            }

            // Architect info modal
            const architectModal = new bootstrap.Modal(document.getElementById('architectProfileModal'));
            document.querySelectorAll('.architect-link').forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    const id = this.dataset.architectId;

                    fetch(`/ClientInterface/GetArchitectProfile?id=${id}`)
                        .then(res => res.json())
                        .then(data => {
                            if (data) {
                                document.getElementById("architectProfileName").innerText = data.fullName;
                                document.getElementById("architectProfileEmail").innerText = data.email || "No email provided";
                                document.getElementById("architectProfilePhone").innerText = data.phone || "No phone provided";
                                document.getElementById("architectProfileLicense").innerText = data.license || "N/A";
                                document.getElementById("architectProfileStyle").innerText = data.style || "N/A";
                                document.getElementById("architectProfileSpecialization").innerText = data.specialization || "N/A";
                                document.getElementById("architectProfileLocation").innerText = data.location || "N/A";
                                document.getElementById("architectProfileCredentials").href = data.credentialsFile || "#";
                                document.getElementById("architectProfilePhoto").src = data.photo || "/images/profile.jpg";

                                architectModal.show();
                            } else {
                                alert("❌ Architect profile not found.");
                            }
                        })
                        .catch(() => alert("❌ Failed to load architect profile."));

                });
            });
        });

        const chatWindow = document.getElementById('chatWindow');
        const inputBox = document.getElementById('clientPrompt');
        const searchBtn = document.getElementById('searchArchitects');
        const resultsContainer = document.getElementById('resultsContainer');

        // Append user messages
        function appendUserMessage(message) {
            let msg = document.createElement('div');
            msg.className = "message-container own";
            msg.innerHTML = `<div class="message-bubble own">${message}</div>`;
            chatWindow.appendChild(msg);
            chatWindow.scrollTop = chatWindow.scrollHeight;
        }

        // Append system/assistant messages
        function appendSystemMessage(message) {
            let msg = document.createElement('div');
            msg.className = "message-container";
            msg.innerHTML = `<div class="message-bubble other">${message}</div>`;
            chatWindow.appendChild(msg);
            chatWindow.scrollTop = chatWindow.scrollHeight;
        }

        // Render architect cards dynamically
        function renderArchitects(matches) {
            resultsContainer.innerHTML = "";

            if (!matches || matches.length === 0) {
                resultsContainer.innerHTML = `
                    <div class="col-12">
                        <div class="alert alert-warning">No architects found. Try refining your description.</div>
                    </div>`;
                appendSystemMessage("😕 No matches found. Try describing differently.");
                return;
            }

            matches.forEach(m => {
                let card = document.createElement('div');
                card.className = "col-lg-6 col-md-12 mb-3";
                card.innerHTML = `
                    <div class="card shadow-sm h-100">
                        <div class="card-body d-flex flex-column">
                            <div class="d-flex align-items-center mb-3">
                                <img src="${m.profilePhoto || '/images/profile.jpg'}"
                                     class="rounded-circle me-3 border"
                                     width="50" height="50"
                                     alt="${m.architectName || 'Architect'}" />
                                <div>
                                    <h6 class="fw-bold mb-0">
                                        <a href="#"
                                           class="architect-link"
                                           data-architect-id="${m.architectId}">
                                            ${m.architectName || "Unnamed Architect"}
                                        </a>
                                    </h6>
                                </div>
                            </div>
                            <button class="btn btn-outline-primary w-100 mt-auto match-btn"
                                    data-architect-id="${m.architectId}">
                                Match
                            </button>
                        </div>
                    </div>
                `;
                resultsContainer.appendChild(card);
            });

            // 🧩 Re-attach modal event listeners for dynamically added architect links
            document.querySelectorAll('.architect-link').forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    const id = this.dataset.architectId;

                    fetch(`/ClientInterface/GetArchitectProfile?id=${id}`)
                        .then(res => res.json())
                        .then(data => {
                            if (data) {
                                document.getElementById("architectProfileName").innerText = data.fullName;
                                document.getElementById("architectProfileEmail").innerText = data.email || "No email provided";
                                document.getElementById("architectProfilePhone").innerText = data.phone || "No phone provided";
                                document.getElementById("architectProfileLicense").innerText = data.license || "N/A";
                                document.getElementById("architectProfileStyle").innerText = data.style || "N/A";
                                document.getElementById("architectProfileSpecialization").innerText = data.specialization || "N/A";
                                document.getElementById("architectProfileLocation").innerText = data.location || "N/A";
                                document.getElementById("architectProfileCredentials").href = data.credentialsFile || "#";
                                document.getElementById("architectProfilePhoto").src = data.photo || "/images/profile.jpg";
                                const modal = new bootstrap.Modal(document.getElementById('architectProfileModal'));
                                modal.show();
                            } else {
                                alert("❌ Architect profile not found.");
                            }
                        })
                        .catch(() => alert("❌ Failed to load architect profile."));
                });
            });
        }

        // Global Match button click (works for static + dynamic)
        $(document).on("click", ".match-btn", function () {
            let architectId = $(this).data("architect-id");
            let token = $('input[name="__RequestVerificationToken"]').val();

            $.post("/ClientInterface/RequestMatch", { architectId: architectId, __RequestVerificationToken: token })
                .done(res => {
                    showNotification(
                        "Success ✅",
                        res.message || "Match request sent successfully!"
                    );
                    if (res.success) location.reload();
                })
                .fail(() => {
                    showNotification(
                    "Error ❌",
                    "Failed to send match request."
                );
            });
        });

        // Handle search with chat integration
        searchBtn.addEventListener('click', function () {
            let prompt = inputBox.value.trim();
            if (!prompt) {
                alert("Please describe your desired architect.");
                return;
            }
            appendUserMessage(prompt);
            appendSystemMessage("🔎 Searching for architects...");
            inputBox.value = "";

            fetch(`/ClientInterface/Matches?query=${encodeURIComponent(prompt)}`, {
                headers: { "X-Requested-With": "XMLHttpRequest" }
            })
            .then(res => res.json())
            .then(data => {
                appendSystemMessage(`✅ Found ${data.length} potential matches.`);
                renderArchitects(data);
            })
            .catch(err => {
                console.error("Search failed:", err);
                appendSystemMessage("❌ Search failed. Please try again.");
                renderArchitects([]);
            });
        });

        function showNotification(title, message) {
            document.getElementById('notificationTitle').textContent = title;
            document.getElementById('notificationMessage').textContent = message;
            const modal = new bootstrap.Modal(document.getElementById('notificationModal'));
            modal.show();
        }
    </script>
}
