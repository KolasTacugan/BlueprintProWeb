@model IEnumerable<BlueprintProWeb.Models.Blueprint>
@{
    ViewData["Title"] = "Blueprint Marketplace";
    Layout = "~/Views/Shared/_ClientSharedLayout.cshtml";
}

<div>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold mt-5 pt-4">Blueprint Marketplace</h2>
        <button class="btn btn-light border mt-5">
            Cart
            <span id="cartCount" class="badge bg-primary ms-1">0</span>
        </button>
    </div>

    <ul class="nav nav-tabs mb-4">
        <li class="nav-item"><a class="nav-link active" href="#">Residential</a></li>
        <li class="nav-item"><a class="nav-link" href="#">Commercial</a></li>
        <li class="nav-item"><a class="nav-link" href="#">Industrial</a></li>
        <li class="nav-item"><a class="nav-link" href="#">Interior</a></li>
    </ul>

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-3 mb-4">
                <div class="card shadow-sm">
                    <img src="~/images/@item.blueprintImage"
                         class="card-img-top protected-img"
                         alt="@item.blueprintName"
                         asp-append-version="true"
                         draggable="false" />

                    <div class="card-body">
                        <h5 class="fw-bold">₱@item.blueprintPrice</h5>
                        <p class="mb-1">@item.blueprintName</p>
                        <small class="text-muted">@item.blueprintDescription</small>

                        <div class="d-flex align-items-center my-2">
                            <span class="text-warning">★★★★★</span>
                            <small class="ms-2">(0)</small>
                        </div>

                        <button class="btn btn-primary w-100 add-to-cart">Add to Cart</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Styles {
    <style>
        /* Prevent dragging/selection of protected images */
        .protected-img {
            -webkit-user-drag: none;
            user-drag: none;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            cursor: default;
        }
    </style>
}

@section Scripts {
    <script>
        document.querySelectorAll('.add-to-cart').forEach(btn => {
            btn.addEventListener('click', () => {
                let cartCount = document.getElementById('cartCount');
                cartCount.innerText = parseInt(cartCount.innerText) + 1;
            });
        });

        // Protection script
        (function () {
            'use strict';

            const protectedSelector = '.card .protected-img';

            // Disable context menu + drag for protected images
            document.querySelectorAll(protectedSelector).forEach(img => {
                img.addEventListener('contextmenu', e => e.preventDefault());
                img.addEventListener('dragstart', e => e.preventDefault());
                img.setAttribute('draggable', 'false');
            });

            // Disable copy
            document.addEventListener('copy', function (e) {
                if (e.clipboardData) {
                    e.clipboardData.clearData();
                }
                e.preventDefault();
            });

            // Block Ctrl+S and Ctrl+Shift+S
            document.addEventListener('keydown', function (e) {
                const key = e.key || e.code;
                if ((e.ctrlKey || e.metaKey) && (key === 's' || key === 'S')) {
                    e.preventDefault();
                }
                if ((e.ctrlKey || e.metaKey) && e.shiftKey && (key === 's' || key === 'S')) {
                    e.preventDefault();
                }
            });

            // Optional: block context menu for whole card (except buttons/inputs)
            document.querySelectorAll('.card').forEach(card => {
                card.addEventListener('contextmenu', function (e) {
                    if (e.target.closest('button, a, input, textarea, select, label')) return;
                    e.preventDefault();
                }, true);
            });

        })();
    </script>
}
